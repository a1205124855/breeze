#更新内核
yum install epel-release curl
sed -i "0,/enabled=0/s//enabled=1/" /etc/yum.repos.d/epel.repo
yum remove -y kernel-devel
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
yum --disablerepo="*" --enablerepo="elrepo-kernel" list available
yum -y --enablerepo=elrepo-kernel install kernel-ml
sed -i "s/GRUB_DEFAULT=saved/GRUB_DEFAULT=0/" /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg
wget https://elrepo.org/linux/kernel/el7/x86_64/RPMS/kernel-ml-devel-4.19.1-1.el7.elrepo.x86_64.rpm
rpm -ivh kernel-ml-devel-4.19.1-1.el7.elrepo.x86_64.rpm
yum -y --enablerepo=elrepo-kernel install kernel-ml-devel
read -p "需要重启VPS，再次执行脚本选择安装wireguard，是否现在重启 ? [Y/n] :" yn
[ -z "${yn}" ] && yn="y"
	if [[ $yn == [Yy] ]]; then
	echo -e "VPS 重启中..."
	reboot
fi



#centos7安装wireguard
    curl -Lo /etc/yum.repos.d/wireguard.repo https://copr.fedorainfracloud.org/coprs/jdoss/wireguard/repo/epel-7/jdoss-wireguard-epel-7.repo
    yum install -y dkms gcc-c++ gcc-gfortran glibc-headers glibc-devel libquadmath-devel libtool systemtap systemtap-devel
    yum -y install wireguard-dkms wireguard-tools
    yum -y install qrencode
	# 首先进入配置文件目录，如果该目录不存在请先手动创建：mkdir /etc/wireguard
	mkdir /etc/wireguard
    cd /etc/wireguard
	# 然后开始生成 密匙对(公匙+私匙)。
    wg genkey | tee sprivatekey | wg pubkey > spublickey
    wg genkey | tee cprivatekey | wg pubkey > cpublickey
    
    
    
#生成服务端配置
    # 井号开头的是注释说明，用该命令执行后会自动过滤注释文字。
    # 下面加粗的这一大段都是一个代码！请把下面几行全部复制，然后粘贴到 SSH软件中执行，不要一行一行执行！
    echo "[Interface]
    # 服务器的私匙，对应客户端配置中的公匙（自动读取上面刚刚生成的密匙内容）
    PrivateKey = $(cat sprivatekey)
    # 本机的内网IP地址，一般默认即可，除非和你服务器或客户端设备本地网段冲突
    Address = 10.0.0.1/24 
    # 运行 WireGuard 时要执行的 iptables 防火墙规则，用于打开NAT转发之类的。
    # 如果你的服务器主网卡名称不是 eth0 ，那么请修改下面防火墙规则中最后的 eth0 为你的主网卡名称。
    PostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	# 停止 WireGuard 时要执行的 iptables 防火墙规则，用于关闭NAT转发之类的。
    # 如果你的服务器主网卡名称不是 eth0 ，那么请修改下面防火墙规则中最后的 eth0 为你的主网卡名称。
    PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
    # 服务端监听端口，可以自行修改
    ListenPort = 443
    # 服务端请求域名解析 DNS
    DNS = 8.8.8.8
    # 保持默认
    MTU = 1420
    # [Peer] 代表客户端配置，每增加一段 [Peer] 就是增加一个客户端账号，具体我稍后会写多用户教程。
    [Peer]
    # 该客户端账号的公匙，对应客户端配置中的私匙（自动读取上面刚刚生成的密匙内容）
    PublicKey = $(cat cpublickey)
    # 该客户端账号的内网IP地址
    AllowedIPs = 10.0.0.2/32"|sed '/^#/d;/^\s*$/d' > wg0.conf
    # 上面加粗的这一大段都是一个代码！请把下面几行全部复制，然后粘贴到 SSH软件中执行，不要一行一行执行！

    
    
#生成客户端配置
    # 井号开头的是注释说明，用该命令执行后会自动过滤注释文字。
    # 下面加粗的这一大段都是一个代码！请把下面几行全部复制，然后粘贴到 SSH软件中执行，不要一行一行执行！
    echo "[Interface]
    # 客户端的私匙，对应服务器配置中的客户端公匙（自动读取上面刚刚生成的密匙内容）
    PrivateKey = $(cat cprivatekey)
    # 客户端的内网IP地址
    Address = 10.0.0.2/24
    # 解析域名用的DNS
    DNS = 8.8.8.8
    # 保持默认
    MTU = 1420
    [Peer]
    # 服务器的公匙，对应服务器的私匙（自动读取上面刚刚生成的密匙内容）
    PublicKey = $(cat spublickey)
    # 服务器地址和端口，下面的 X.X.X.X 记得更换为你的服务器公网IP，端口请填写服务端配置时的监听端口
    #Endpoint = X.X.X.X:443
	Endpoint = $(curl ipv4.icanhazip.com):443
    # 因为是客户端，所以这个设置为全部IP段即可
    AllowedIPs = 0.0.0.0/0, ::0/0
    # 保持连接，如果客户端或服务端是 NAT 网络(比如国内大多数家庭宽带没有公网IP，都是NAT)，那么就需要添加这个参数定时链接服务端(单位：秒)，如果你的服务器和你本地都不是 NAT 网络，那么建议不使用该参数（设置为0，或客户端配置文件中删除这行）
    PersistentKeepalive = 25"|sed '/^#/d;/^\s*$/d' > client.conf
    # 上面加粗的这一大段都是一个代码！请把下面几行全部复制，然后粘贴到 SSH软件中执行，不要一行一行执行！

    

# 赋予配置文件夹权限
chmod 777 -R /etc/wireguard
# 打开防火墙转发功能
echo 1 > /proc/sys/net/ipv4/ip_forward
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
sysctl -p
wg-quick up wg0
# 执行命令后，输出示例如下（仅供参考）
#[#] ip link add wg0 type wireguard
#[#] wg setconf wg0 /dev/fd/63
#[#] ip address add 10.0.0.1/24 dev wg0
#[#] ip link set mtu 1420 dev wg0
#[#] ip link set wg0 up
#[#] resolvconf -a tun.wg0 -m 0 -x
#[#] iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
# 如果此处没有报错：RTNETLINK answers: Operation not supported，且输入内容差不多，那么说明启动成功了！


#停止WireGuard
wg-quick down wg0

#查询WireGuard状态
wg

# 设置开机启动
systemctl enable wg-quick@wg0

# 取消开机启动
systemctl disable wg-quick@wg0
